name: Deploy Strapi build

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      deployments: write
    name: Strapi deployment
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Dump database postgres sql
        run: pg_dump -h 127.0.0.1 -p 5432 -U username -d unicode_prod  -f backup.sql

      - name: Upload backup as artifact
        uses: actions/upload-artifact@v2
        with:
          name: backup
          path: backup.sql

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:prod
        env:
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

          # Database
          DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_SSL: ${{ secrets.DATABASE_SSL }}

          # Cloudflare R2 & CDN
          CF_ACCESS_KEY_ID: ${{ secrets.CF_ACCESS_KEY_ID }}
          CF_ACCESS_SECRET: ${{ secrets.CF_ACCESS_SECRET }}
          CF_PUBLIC_ACCESS_URL: ${{ secrets.CF_PUBLIC_ACCESS_URL }}
          CF_BUCKET: ${{ secrets.CF_BUCKET }}
          CF_ENDPOINT: ${{ secrets.CF_ENDPOINT }}

      - name: Deploy
        run:
