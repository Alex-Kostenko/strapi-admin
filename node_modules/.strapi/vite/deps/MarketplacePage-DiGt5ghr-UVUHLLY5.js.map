{
  "version": 3,
  "sources": ["../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/hooks/useDebounce.ts", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/NpmPackagesFilters.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/NpmPackageCard.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/NpmPackagesGrid.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/PageHeader.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/OfflineLayout.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/components/SortSelect.tsx", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/hooks/useMarketplaceData.ts", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/hooks/useNavigatorOnline.ts", "../../../@strapi/plugin-documentation/node_modules/@strapi/admin/admin/src/pages/Marketplace/MarketplacePage.tsx"],
  "sourcesContent": ["import * as React from 'react';\n\nexport function useDebounce<TValue>(value: TValue, delay: number): TValue {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n", "import * as React from 'react';\n\nimport {\n  Box,\n  Button,\n  Tag,\n  MultiSelect,\n  MultiSelectOption,\n  MultiSelectProps,\n  Popover,\n  Flex,\n} from '@strapi/design-system';\nimport { Cross, Filter } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport type { Categories, Collections, FilterTypes } from '../hooks/useMarketplaceData';\nimport type { NpmPackageType, MarketplacePageQuery } from '../MarketplacePage';\n\ninterface NpmPackagesFiltersProps {\n  handleSelectClear: (type: FilterTypes) => void;\n  handleSelectChange: (update: Partial<MarketplacePageQuery>) => void;\n  npmPackageType: NpmPackageType;\n  possibleCategories: Partial<Record<Categories, number>>;\n  possibleCollections: Partial<Record<Collections, number>>;\n  query: MarketplacePageQuery;\n}\n\nconst NpmPackagesFilters = ({\n  handleSelectClear,\n  handleSelectChange,\n  npmPackageType,\n  possibleCategories,\n  possibleCollections,\n  query,\n}: NpmPackagesFiltersProps) => {\n  const { formatMessage } = useIntl();\n\n  const handleTagRemove = (tagToRemove: string, filterType: FilterTypes) => {\n    const update = {\n      [filterType]: (query[filterType] ?? []).filter((previousTag) => previousTag !== tagToRemove),\n    };\n\n    handleSelectChange(update);\n  };\n\n  return (\n    <Popover.Root>\n      <Popover.Trigger>\n        <Button variant=\"tertiary\" startIcon={<Filter />}>\n          {formatMessage({ id: 'app.utils.filters', defaultMessage: 'Filters' })}\n        </Button>\n      </Popover.Trigger>\n      <Popover.Content sideOffset={4}>\n        <Flex padding={3} direction=\"column\" alignItems=\"stretch\" gap={1}>\n          <FilterSelect\n            message={formatMessage({\n              id: 'admin.pages.MarketPlacePage.filters.collections',\n              defaultMessage: 'Collections',\n            })}\n            value={query?.collections || []}\n            onChange={(newCollections) => {\n              const update = { collections: newCollections };\n              handleSelectChange(update);\n            }}\n            onClear={() => handleSelectClear('collections')}\n            possibleFilters={possibleCollections}\n            customizeContent={(values) =>\n              formatMessage(\n                {\n                  id: 'admin.pages.MarketPlacePage.filters.collectionsSelected',\n                  defaultMessage:\n                    '{count, plural, =0 {No collections} one {# collection} other {# collections}} selected',\n                },\n                { count: values?.length ?? 0 }\n              )\n            }\n          />\n          {npmPackageType === 'plugin' && (\n            <FilterSelect\n              message={formatMessage({\n                id: 'admin.pages.MarketPlacePage.filters.categories',\n                defaultMessage: 'Categories',\n              })}\n              value={query?.categories || []}\n              onChange={(newCategories) => {\n                const update = { categories: newCategories };\n                handleSelectChange(update);\n              }}\n              onClear={() => handleSelectClear('categories')}\n              possibleFilters={possibleCategories}\n              customizeContent={(values) =>\n                formatMessage(\n                  {\n                    id: 'admin.pages.MarketPlacePage.filters.categoriesSelected',\n                    defaultMessage:\n                      '{count, plural, =0 {No categories} one {# category} other {# categories}} selected',\n                  },\n                  { count: values?.length ?? 0 }\n                )\n              }\n            />\n          )}\n        </Flex>\n      </Popover.Content>\n\n      {query.collections?.map((collection) => (\n        <Box key={collection} padding={1}>\n          <Tag icon={<Cross />} onClick={() => handleTagRemove(collection, 'collections')}>\n            {collection}\n          </Tag>\n        </Box>\n      ))}\n      {npmPackageType === 'plugin' &&\n        query.categories?.map((category) => (\n          <Box key={category} padding={1}>\n            <Tag icon={<Cross />} onClick={() => handleTagRemove(category, 'categories')}>\n              {category}\n            </Tag>\n          </Box>\n        ))}\n    </Popover.Root>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * FilterSelect\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FilterSelectProps\n  extends Pick<MultiSelectProps, 'customizeContent' | 'onClear' | 'onChange' | 'value'> {\n  message: string;\n  possibleFilters:\n    | NpmPackagesFiltersProps['possibleCategories']\n    | NpmPackagesFiltersProps['possibleCollections'];\n}\n\nconst FilterSelect = ({\n  message,\n  value,\n  onChange,\n  possibleFilters,\n  onClear,\n  customizeContent,\n}: FilterSelectProps) => {\n  return (\n    <MultiSelect\n      data-testid={`${message}-button`}\n      aria-label={message}\n      placeholder={message}\n      onChange={onChange}\n      onClear={onClear}\n      value={value}\n      customizeContent={customizeContent}\n    >\n      {Object.entries(possibleFilters).map(([filterName, count]) => {\n        return (\n          <MultiSelectOption\n            data-testid={`${filterName}-${count}`}\n            key={filterName}\n            value={filterName}\n          >\n            {`${filterName} (${count})`}\n          </MultiSelectOption>\n        );\n      })}\n    </MultiSelect>\n  );\n};\n\nexport { NpmPackagesFilters };\nexport type { NpmPackagesFiltersProps };\n", "import {\n  Box,\n  Flex,\n  Tooltip,\n  Typography,\n  Divider,\n  Button,\n  LinkButton,\n  TypographyComponent,\n} from '@strapi/design-system';\nimport { CheckCircle, ExternalLink, Download, Star, Check, Duplicate } from '@strapi/icons';\nimport { GitHub } from '@strapi/icons/symbols';\nimport pluralize from 'pluralize';\nimport { useIntl } from 'react-intl';\nimport * as semver from 'semver';\nimport { styled } from 'styled-components';\n\nimport StrapiLogo from '../../../assets/images/logo-strapi-2022.svg';\nimport { AppInfoContextValue } from '../../../features/AppInfo';\nimport { useNotification } from '../../../features/Notifications';\nimport { useTracking } from '../../../features/Tracking';\nimport { useClipboard } from '../../../hooks/useClipboard';\n\nimport type { Plugin, Provider } from '../hooks/useMarketplaceData';\nimport type { NpmPackageType } from '../MarketplacePage';\n\n// Custom component to have an ellipsis after the 2nd line\nconst EllipsisText = styled<TypographyComponent<'p'>>(Typography)`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n`;\n\ninterface NpmPackageCardProps extends Pick<AppInfoContextValue, 'useYarn'> {\n  npmPackage: Plugin | Provider;\n  isInstalled: boolean;\n  isInDevelopmentMode: AppInfoContextValue['autoReload'];\n  npmPackageType: NpmPackageType;\n  strapiAppVersion: AppInfoContextValue['strapiVersion'];\n}\n\nconst NpmPackageCard = ({\n  npmPackage,\n  isInstalled,\n  useYarn,\n  isInDevelopmentMode,\n  npmPackageType,\n  strapiAppVersion,\n}: NpmPackageCardProps) => {\n  const { attributes } = npmPackage;\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n\n  const commandToCopy = useYarn\n    ? `yarn add ${attributes.npmPackageName}`\n    : `npm install ${attributes.npmPackageName}`;\n\n  const madeByStrapiMessage = formatMessage({\n    id: 'admin.pages.MarketPlacePage.plugin.tooltip.madeByStrapi',\n    defaultMessage: 'Made by Strapi',\n  });\n\n  const npmPackageHref = `https://market.strapi.io/${pluralize.plural(npmPackageType)}/${\n    attributes.slug\n  }`;\n\n  const versionRange = semver.validRange(attributes.strapiVersion);\n\n  const isCompatible = versionRange\n    ? semver.satisfies(strapiAppVersion ?? '', versionRange)\n    : false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      justifyContent=\"space-between\"\n      paddingTop={4}\n      paddingRight={4}\n      paddingBottom={4}\n      paddingLeft={4}\n      hasRadius\n      background=\"neutral0\"\n      shadow=\"tableShadow\"\n      height=\"100%\"\n      alignItems=\"normal\"\n      data-testid=\"npm-package-card\"\n    >\n      <Box>\n        <Flex direction=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Box\n            tag=\"img\"\n            src={attributes.logo.url}\n            alt={`${attributes.name} logo`}\n            hasRadius\n            width={11}\n            height={11}\n          />\n          <PackageStats\n            githubStars={attributes.githubStars}\n            npmDownloads={attributes.npmDownloads}\n            npmPackageType={npmPackageType}\n          />\n        </Flex>\n        <Box paddingTop={4}>\n          <Typography tag=\"h3\" variant=\"delta\">\n            <Flex\n              alignItems=\"center\"\n              gap={attributes.validated && !attributes.madeByStrapi ? 2 : 1}\n            >\n              {attributes.name}\n              {attributes.validated && !attributes.madeByStrapi && (\n                <Tooltip\n                  description={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.plugin.tooltip.verified',\n                    defaultMessage: 'Plugin verified by Strapi',\n                  })}\n                >\n                  <CheckCircle fill=\"success600\" />\n                </Tooltip>\n              )}\n              {attributes.madeByStrapi && (\n                <Tooltip description={madeByStrapiMessage}>\n                  <Box\n                    tag=\"img\"\n                    src={StrapiLogo}\n                    alt={madeByStrapiMessage}\n                    width={6}\n                    height=\"auto\"\n                  />\n                </Tooltip>\n              )}\n            </Flex>\n          </Typography>\n        </Box>\n        <Box paddingTop={2}>\n          <EllipsisText tag=\"p\" variant=\"omega\" textColor=\"neutral600\">\n            {attributes.description}\n          </EllipsisText>\n        </Box>\n      </Box>\n\n      <Flex gap={2} style={{ alignSelf: 'flex-end' }} paddingTop={6}>\n        <LinkButton\n          size=\"S\"\n          href={npmPackageHref}\n          isExternal\n          endIcon={<ExternalLink />}\n          aria-label={formatMessage(\n            {\n              id: 'admin.pages.MarketPlacePage.plugin.info.label',\n              defaultMessage: 'Learn more about {pluginName}',\n            },\n            { pluginName: attributes.name }\n          )}\n          variant=\"tertiary\"\n          onClick={() => trackUsage('didPluginLearnMore')}\n        >\n          {formatMessage({\n            id: 'admin.pages.MarketPlacePage.plugin.info.text',\n            defaultMessage: 'More',\n          })}\n        </LinkButton>\n        <InstallPluginButton\n          isInstalled={isInstalled}\n          isInDevelopmentMode={isInDevelopmentMode}\n          isCompatible={isCompatible}\n          commandToCopy={commandToCopy}\n          strapiAppVersion={strapiAppVersion}\n          strapiPeerDepVersion={attributes.strapiVersion}\n          pluginName={attributes.name}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * InstallPluginButton\n * -----------------------------------------------------------------------------------------------*/\n\ninterface InstallPluginButtonProps\n  extends Pick<NpmPackageCardProps, 'isInstalled' | 'isInDevelopmentMode' | 'strapiAppVersion'> {\n  commandToCopy: string;\n  pluginName: string;\n  strapiPeerDepVersion?: string;\n  isCompatible?: boolean;\n}\n\nconst InstallPluginButton = ({\n  isInstalled,\n  isInDevelopmentMode,\n  isCompatible,\n  commandToCopy,\n  strapiAppVersion,\n  strapiPeerDepVersion,\n  pluginName,\n}: InstallPluginButtonProps) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const { copy } = useClipboard();\n\n  const handleCopy = async () => {\n    const didCopy = await copy(commandToCopy);\n\n    if (didCopy) {\n      trackUsage('willInstallPlugin');\n      toggleNotification({\n        type: 'success',\n        message: formatMessage({ id: 'admin.pages.MarketPlacePage.plugin.copy.success' }),\n      });\n    }\n  };\n\n  // Already installed\n  if (isInstalled) {\n    return (\n      <Flex gap={2} paddingLeft={4}>\n        <Check width=\"1.2rem\" height=\"1.2rem\" color=\"success600\" />\n        <Typography variant=\"omega\" textColor=\"success600\" fontWeight=\"bold\">\n          {formatMessage({\n            id: 'admin.pages.MarketPlacePage.plugin.installed',\n            defaultMessage: 'Installed',\n          })}\n        </Typography>\n      </Flex>\n    );\n  }\n\n  // In development, show install button\n  if (isInDevelopmentMode && isCompatible !== false) {\n    return (\n      <CardButton\n        strapiAppVersion={strapiAppVersion}\n        strapiPeerDepVersion={strapiPeerDepVersion}\n        handleCopy={handleCopy}\n        pluginName={pluginName}\n      />\n    );\n  }\n\n  // Not in development and plugin not installed already. Show nothing\n  return null;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * CardButton\n * -----------------------------------------------------------------------------------------------*/\n\ninterface CardButtonProps\n  extends Pick<NpmPackageCardProps, 'strapiAppVersion'>,\n    Pick<InstallPluginButtonProps, 'strapiPeerDepVersion' | 'pluginName'> {\n  handleCopy: () => void;\n}\n\nconst CardButton = ({\n  strapiPeerDepVersion,\n  strapiAppVersion,\n  handleCopy,\n  pluginName,\n}: CardButtonProps) => {\n  const { formatMessage } = useIntl();\n  const versionRange = semver.validRange(strapiPeerDepVersion);\n  const isCompatible = semver.satisfies(strapiAppVersion ?? '', versionRange ?? '');\n\n  const installMessage = formatMessage({\n    id: 'admin.pages.MarketPlacePage.plugin.copy',\n    defaultMessage: 'Copy install command',\n  });\n\n  // Only plugins receive a strapiAppVersion\n  if (strapiAppVersion) {\n    if (!versionRange || !isCompatible) {\n      return (\n        <Tooltip\n          data-testid={`tooltip-${pluginName}`}\n          label={formatMessage(\n            {\n              id: 'admin.pages.MarketPlacePage.plugin.version',\n              defaultMessage:\n                'Update your Strapi version: \"{strapiAppVersion}\" to: \"{versionRange}\"',\n            },\n            {\n              strapiAppVersion,\n              versionRange,\n            }\n          )}\n        >\n          <span>\n            <Button\n              size=\"S\"\n              startIcon={<Duplicate />}\n              variant=\"secondary\"\n              onClick={handleCopy}\n              disabled={!isCompatible}\n            >\n              {installMessage}\n            </Button>\n          </span>\n        </Tooltip>\n      );\n    }\n  }\n\n  return (\n    <Button size=\"S\" startIcon={<Duplicate />} variant=\"secondary\" onClick={handleCopy}>\n      {installMessage}\n    </Button>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * PackageStats\n * -----------------------------------------------------------------------------------------------*/\n\ninterface PackageStatsProps {\n  githubStars?: number;\n  npmDownloads?: number;\n  npmPackageType: NpmPackageType;\n}\n\nconst PackageStats = ({ githubStars = 0, npmDownloads = 0, npmPackageType }: PackageStatsProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Flex gap={1}>\n      {!!githubStars && (\n        <>\n          <GitHub height=\"1.2rem\" width=\"1.2rem\" aria-hidden />\n          <Star height=\"1.2rem\" width=\"1.2rem\" fill=\"warning500\" aria-hidden />\n          <p\n            aria-label={formatMessage(\n              {\n                id: `admin.pages.MarketPlacePage.${npmPackageType}.githubStars`,\n                defaultMessage: `This {package} was starred {starsCount} on GitHub`,\n              },\n              {\n                starsCount: githubStars,\n                package: npmPackageType,\n              }\n            )}\n          >\n            <Typography variant=\"pi\" textColor=\"neutral800\">\n              {githubStars}\n            </Typography>\n          </p>\n          <VerticalDivider />\n        </>\n      )}\n      <Download height=\"1.2rem\" width=\"1.2rem\" aria-hidden />\n      <p\n        aria-label={formatMessage(\n          {\n            id: `admin.pages.MarketPlacePage.${npmPackageType}.downloads`,\n            defaultMessage: `This {package} has {downloadsCount} weekly downloads`,\n          },\n          {\n            downloadsCount: npmDownloads,\n            package: npmPackageType,\n          }\n        )}\n      >\n        <Typography variant=\"pi\" textColor=\"neutral800\">\n          {npmDownloads}\n        </Typography>\n      </p>\n    </Flex>\n  );\n};\n\nconst VerticalDivider = styled(Divider)`\n  width: 1.2rem;\n  transform: rotate(90deg);\n`;\n\nexport { NpmPackageCard };\nexport type { NpmPackageCardProps };\n", "import { Box, BoxComponent, Flex, Grid, Typography } from '@strapi/design-system';\nimport { EmptyDocuments } from '@strapi/icons/symbols';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { Layouts } from '../../../components/Layouts/Layout';\nimport { Page } from '../../../components/PageHelpers';\nimport { AppInfoContextValue } from '../../../features/AppInfo';\n\nimport { NpmPackageCard, NpmPackageCardProps } from './NpmPackageCard';\n\nimport type { Plugin, Provider } from '../hooks/useMarketplaceData';\n\ninterface NpmPackagesGridProps extends Pick<NpmPackageCardProps, 'npmPackageType' | 'useYarn'> {\n  debouncedSearch: string;\n  installedPackageNames: string[];\n  isInDevelopmentMode: AppInfoContextValue['autoReload'];\n  npmPackages?: Array<Plugin | Provider>;\n  status: 'idle' | 'loading' | 'error' | 'success';\n  strapiAppVersion?: NpmPackageCardProps['strapiAppVersion'];\n}\n\nconst NpmPackagesGrid = ({\n  status,\n  npmPackages = [],\n  installedPackageNames = [],\n  useYarn,\n  isInDevelopmentMode,\n  npmPackageType,\n  strapiAppVersion,\n  debouncedSearch,\n}: NpmPackagesGridProps) => {\n  const { formatMessage } = useIntl();\n\n  if (status === 'error') {\n    return <Page.Error />;\n  }\n\n  if (status === 'loading') {\n    return <Page.Loading />;\n  }\n\n  const emptySearchMessage = formatMessage(\n    {\n      id: 'admin.pages.MarketPlacePage.search.empty',\n      defaultMessage: 'No result for \"{target}\"',\n    },\n    { target: debouncedSearch }\n  );\n\n  if (npmPackages.length === 0) {\n    return (\n      <Box position=\"relative\">\n        <Layouts.Grid size=\"M\">\n          {Array(12)\n            .fill(null)\n            .map((_, idx) => (\n              <EmptyPluginCard key={idx} height=\"234px\" hasRadius />\n            ))}\n        </Layouts.Grid>\n        <Box position=\"absolute\" top={11} width=\"100%\">\n          <Flex alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n            <EmptyDocuments width=\"160px\" height=\"88px\" />\n            <Box paddingTop={6}>\n              <Typography variant=\"delta\" tag=\"p\" textColor=\"neutral600\">\n                {emptySearchMessage}\n              </Typography>\n            </Box>\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid.Root gap={4}>\n      {npmPackages.map((npmPackage) => (\n        <Grid.Item\n          col={4}\n          s={6}\n          xs={12}\n          style={{ height: '100%' }}\n          key={npmPackage.id}\n          direction=\"column\"\n          alignItems=\"stretch\"\n        >\n          <NpmPackageCard\n            npmPackage={npmPackage}\n            isInstalled={installedPackageNames.includes(npmPackage.attributes.npmPackageName)}\n            useYarn={useYarn}\n            isInDevelopmentMode={isInDevelopmentMode}\n            npmPackageType={npmPackageType}\n            strapiAppVersion={strapiAppVersion}\n          />\n        </Grid.Item>\n      ))}\n    </Grid.Root>\n  );\n};\n\nconst EmptyPluginCard = styled<BoxComponent>(Box)`\n  background: ${({ theme }) =>\n    `linear-gradient(180deg, rgba(234, 234, 239, 0) 0%, ${theme.colors.neutral150} 100%)`};\n  opacity: 0.33;\n`;\n\nexport { NpmPackagesGrid };\n", "import { LinkButton } from '@strapi/design-system';\nimport { Upload } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { Layouts } from '../../../components/Layouts/Layout';\nimport { useTracking } from '../../../features/Tracking';\n\nimport type { NpmPackageType } from '../MarketplacePage';\n\ninterface PageHeaderProps {\n  isOnline?: boolean;\n  npmPackageType?: NpmPackageType;\n}\n\nconst PageHeader = ({ isOnline, npmPackageType = 'plugin' }: PageHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n\n  const tracking = npmPackageType === 'provider' ? 'didSubmitProvider' : 'didSubmitPlugin';\n\n  return (\n    <Layouts.Header\n      title={formatMessage({\n        id: 'global.marketplace',\n        defaultMessage: 'Marketplace',\n      })}\n      subtitle={formatMessage({\n        id: 'admin.pages.MarketPlacePage.subtitle',\n        defaultMessage: 'Get more out of Strapi',\n      })}\n      primaryAction={\n        isOnline && (\n          <LinkButton\n            startIcon={<Upload />}\n            variant=\"tertiary\"\n            href={`https://market.strapi.io/submit-${npmPackageType}`}\n            onClick={() => trackUsage(tracking)}\n            isExternal\n          >\n            {formatMessage({\n              id: `admin.pages.MarketPlacePage.submit.${npmPackageType}.link`,\n              defaultMessage: `Submit ${npmPackageType}`,\n            })}\n          </LinkButton>\n        )\n      }\n    />\n  );\n};\n\nexport { PageHeader };\nexport type { PageHeaderProps };\n", "import { Box, Flex, Main, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { Layouts } from '../../../components/Layouts/Layout';\n\nimport { PageHeader } from './PageHeader';\n\nconst OfflineLayout = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Layouts.Root>\n      <Main>\n        <PageHeader />\n        <Flex\n          width=\"100%\"\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          paddingTop={`12rem`}\n        >\n          <Box paddingBottom={2}>\n            <Typography textColor=\"neutral700\" variant=\"alpha\">\n              {formatMessage({\n                id: 'admin.pages.MarketPlacePage.offline.title',\n                defaultMessage: 'You are offline',\n              })}\n            </Typography>\n          </Box>\n          <Box paddingBottom={6}>\n            <Typography textColor=\"neutral700\" variant=\"epsilon\">\n              {formatMessage({\n                id: 'admin.pages.MarketPlacePage.offline.subtitle',\n                defaultMessage: 'You need to be connected to the Internet to access Strapi Market.',\n              })}\n            </Typography>\n          </Box>\n          <svg\n            width=\"88\"\n            height=\"88\"\n            viewBox=\"0 0 88 88\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect x=\".5\" y=\".5\" width=\"87\" height=\"87\" rx=\"43.5\" fill=\"#F0F0FF\" />\n            <path\n              d=\"M34 39.3h-4c-2.6 0-4.7 1-6.6 2.8a9 9 0 0 0-2.7 6.6 9 9 0 0 0 2.7 6.6A9 9 0 0 0 30 58h22.8L34 39.3Zm-11-11 3-3 39 39-3 3-4.7-4.6H30a13.8 13.8 0 0 1-14-14c0-3.8 1.3-7 4-9.7 2.6-2.7 5.7-4.2 9.5-4.3L23 28.2Zm38.2 11.1c3 .2 5.5 1.5 7.6 3.7A11 11 0 0 1 72 51c0 4-1.6 7.2-5 9.5l-3.3-3.4a6.5 6.5 0 0 0 3.6-6.1c0-1.9-.7-3.5-2-5-1.5-1.3-3.1-2-5-2h-3.5v-1.2c0-3.6-1.2-6.6-3.7-9a13 13 0 0 0-15-2.3L34.6 28a17 17 0 0 1 20.3 1.5c3.5 2.7 5.5 6 6.3 10Z\"\n              fill=\"#4945FF\"\n            />\n            <rect x=\".5\" y=\".5\" width=\"87\" height=\"87\" rx=\"43.5\" stroke=\"#D9D8FF\" />\n          </svg>\n        </Flex>\n      </Main>\n    </Layouts.Root>\n  );\n};\n\nexport { OfflineLayout };\n", "import { Box, SingleSelectOption, SingleSelect, BoxComponent } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nconst SORT_TYPES = {\n  'name:asc': {\n    selected: {\n      id: 'admin.pages.MarketPlacePage.sort.alphabetical.selected',\n      defaultMessage: 'Sort by alphabetical order',\n    },\n    option: {\n      id: 'admin.pages.MarketPlacePage.sort.alphabetical',\n      defaultMessage: 'Alphabetical order',\n    },\n  },\n  'submissionDate:desc': {\n    selected: {\n      id: 'admin.pages.MarketPlacePage.sort.newest.selected',\n      defaultMessage: 'Sort by newest',\n    },\n    option: {\n      id: 'admin.pages.MarketPlacePage.sort.newest',\n      defaultMessage: 'Newest',\n    },\n  },\n  'githubStars:desc': {\n    selected: {\n      id: 'admin.pages.MarketPlacePage.sort.githubStars.selected',\n      defaultMessage: 'Sort by GitHub stars',\n    },\n    option: {\n      id: 'admin.pages.MarketPlacePage.sort.githubStars',\n      defaultMessage: 'Number of GitHub stars',\n    },\n  },\n  'npmDownloads:desc': {\n    selected: {\n      id: 'admin.pages.MarketPlacePage.sort.npmDownloads.selected',\n      defaultMessage: 'Sort by npm downloads',\n    },\n    option: {\n      id: 'admin.pages.MarketPlacePage.sort.npmDownloads',\n      defaultMessage: 'Number of downloads',\n    },\n  },\n} as const;\n\ninterface SortSelectProps {\n  sortQuery: keyof typeof SORT_TYPES;\n  handleSelectChange: (payload: { sort: string }) => void;\n}\n\nconst SortSelect = ({ sortQuery, handleSelectChange }: SortSelectProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <SelectWrapper>\n      <SingleSelect\n        value={sortQuery}\n        customizeContent={() => formatMessage(SORT_TYPES[sortQuery].selected)}\n        onChange={(sortName) => {\n          // @ts-expect-error – in V2 design-system we'll only ever return strings.\n          handleSelectChange({ sort: sortName });\n        }}\n        aria-label={formatMessage({\n          id: 'admin.pages.MarketPlacePage.sort.label',\n          defaultMessage: 'Sort by',\n        })}\n        size=\"S\"\n      >\n        {Object.entries(SORT_TYPES).map(([sortName, messages]) => {\n          return (\n            <SingleSelectOption key={sortName} value={sortName}>\n              {formatMessage(messages.option)}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n    </SelectWrapper>\n  );\n};\n\nconst SelectWrapper = styled<BoxComponent>(Box)`\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n\n  span {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n  }\n`;\n\nexport { SortSelect };\nexport type { SortSelectProps };\n", "import { useNotifyAT } from '@strapi/design-system';\nimport * as qs from 'qs';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from 'react-query';\n\nimport { useNotification } from '../../../features/Notifications';\n\nimport type { MarketplacePageQuery, NpmPackageType, TabQuery } from '../MarketplacePage';\n\nconst MARKETPLACE_API_URL = 'https://market-api.strapi.io';\n\ninterface UseMarketplaceDataParams {\n  npmPackageType: NpmPackageType;\n  debouncedSearch: string;\n  query?: MarketplacePageQuery;\n  tabQuery: TabQuery;\n  strapiVersion?: string | null;\n}\n\ntype Collections =\n  | 'Verified'\n  | 'Made by the community'\n  | 'Made by Strapi'\n  | 'Made by official partners';\n\ntype Categories = 'Custom fields' | 'Deployment' | 'Monitoring';\n\ntype FilterTypes = 'categories' | 'collections';\n\ninterface Plugin {\n  id: string;\n  attributes: {\n    name: string;\n    description: string;\n    slug: string;\n    npmPackageName: string;\n    npmPackageUrl: string;\n    npmDownloads: number;\n    repositoryUrl: string;\n    githubStars: number;\n    logo: {\n      url: string;\n    };\n    developerName: string;\n    validated: boolean;\n    madeByStrapi: boolean;\n    strapiCompatibility: string;\n    submissionDate: string;\n    collections: Collections[];\n    categories: Categories[];\n    strapiVersion: string;\n    screenshots: Array<{\n      url: string;\n    }>;\n  };\n}\n\ninterface Provider {\n  id: string;\n  attributes: {\n    name: string;\n    description: string;\n    slug: string;\n    npmPackageName: string;\n    npmPackageUrl: string;\n    npmDownloads: number;\n    repositoryUrl: string;\n    githubStars: number;\n    pluginName: string;\n    logo: {\n      url: string;\n    };\n    developerName: string;\n    validated: boolean;\n    madeByStrapi: boolean;\n    strapiCompatibility: string;\n    strapiVersion?: never;\n    submissionDate: string;\n    collections: Collections[];\n  };\n}\n\ninterface MarketplaceMeta {\n  collections: Record<Collections, number>;\n  pagination: {\n    page: number;\n    pageSize: number;\n    pageCount: number;\n    total: number;\n  };\n}\n\ninterface MarketplaceResponse<TData extends Plugin | Provider> {\n  data: TData[];\n  meta: TData extends Provider\n    ? MarketplaceMeta\n    : MarketplaceMeta & { categories: Record<Categories, number> };\n}\n\nfunction useMarketplaceData({\n  npmPackageType,\n  debouncedSearch,\n  query,\n  tabQuery,\n  strapiVersion,\n}: UseMarketplaceDataParams) {\n  const { notifyStatus } = useNotifyAT();\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const marketplaceTitle = formatMessage({\n    id: 'global.marketplace',\n    defaultMessage: 'Marketplace',\n  });\n\n  const notifyMarketplaceLoad = () => {\n    notifyStatus(\n      formatMessage(\n        {\n          id: 'app.utils.notify.data-loaded',\n          defaultMessage: 'The {target} has loaded',\n        },\n        { target: marketplaceTitle }\n      )\n    );\n  };\n\n  const paginationParams = {\n    page: query?.page || 1,\n    pageSize: query?.pageSize || 24,\n  };\n\n  const pluginParams = {\n    ...tabQuery.plugin,\n    pagination: paginationParams,\n    search: debouncedSearch,\n    version: strapiVersion,\n  };\n\n  const { data: pluginsResponse, status: pluginsStatus } = useQuery(\n    ['marketplace', 'plugins', pluginParams],\n    async () => {\n      try {\n        const queryString = qs.stringify(pluginParams);\n        const res = await fetch(`${MARKETPLACE_API_URL}/plugins?${queryString}`);\n\n        if (!res.ok) {\n          throw new Error('Failed to fetch marketplace plugins.');\n        }\n\n        const data = (await res.json()) as MarketplaceResponse<Plugin>;\n        return data;\n      } catch (error) {\n        // silence\n      }\n\n      return null;\n    },\n    {\n      onSuccess() {\n        notifyMarketplaceLoad();\n      },\n      onError() {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occured' }),\n        });\n      },\n    }\n  );\n\n  const providerParams = {\n    ...tabQuery.provider,\n    pagination: paginationParams,\n    search: debouncedSearch,\n    version: strapiVersion,\n  };\n\n  const { data: providersResponse, status: providersStatus } = useQuery(\n    ['marketplace', 'providers', providerParams],\n    async () => {\n      const queryString = qs.stringify(providerParams);\n      const res = await fetch(`${MARKETPLACE_API_URL}/providers?${queryString}`);\n\n      if (!res.ok) {\n        throw new Error('Failed to fetch marketplace providers.');\n      }\n\n      const data = (await res.json()) as MarketplaceResponse<Provider>;\n\n      return data;\n    },\n    {\n      onSuccess() {\n        notifyMarketplaceLoad();\n      },\n      onError() {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occured' }),\n        });\n      },\n    }\n  );\n\n  const npmPackageTypeResponse = npmPackageType === 'plugin' ? pluginsResponse : providersResponse;\n\n  const possibleCollections = npmPackageTypeResponse?.meta.collections ?? {};\n  const possibleCategories = pluginsResponse?.meta.categories ?? {};\n\n  const { pagination } = npmPackageTypeResponse?.meta ?? {};\n\n  return {\n    pluginsResponse,\n    providersResponse,\n    pluginsStatus,\n    providersStatus,\n    possibleCollections,\n    possibleCategories,\n    pagination,\n  };\n}\n\nexport { useMarketplaceData };\nexport type {\n  MarketplaceResponse,\n  Plugin,\n  Provider,\n  MarketplaceMeta,\n  Collections,\n  Categories,\n  FilterTypes,\n  UseMarketplaceDataParams,\n};\n", "import * as React from 'react';\n\n/**\n * For more details about this hook see:\n * https://www.30secondsofcode.org/react/s/use-navigator-on-line\n */\nexport const useNavigatorOnline = (): boolean => {\n  const onlineStatus =\n    typeof navigator !== 'undefined' && typeof navigator.onLine === 'boolean'\n      ? navigator.onLine\n      : true;\n\n  const [isOnline, setIsOnline] = React.useState(onlineStatus);\n\n  const setOnline = () => setIsOnline(true);\n  const setOffline = () => setIsOnline(false);\n\n  React.useEffect(() => {\n    window.addEventListener('online', setOnline);\n    window.addEventListener('offline', setOffline);\n\n    return () => {\n      window.removeEventListener('online', setOnline);\n      window.removeEventListener('offline', setOffline);\n    };\n  }, []);\n\n  return isOnline;\n};\n", "import * as React from 'react';\n\nimport { Box, Flex, Searchbar, Tabs } from '@strapi/design-system';\nimport { ExternalLink } from '@strapi/icons';\nimport { GlassesSquare } from '@strapi/icons/symbols';\nimport { useIntl } from 'react-intl';\n\nimport { ContentBox } from '../../components/ContentBox';\nimport { Layouts } from '../../components/Layouts/Layout';\nimport { Page } from '../../components/PageHelpers';\nimport { Pagination } from '../../components/Pagination';\nimport { useTypedSelector } from '../../core/store/hooks';\nimport { useAppInfo } from '../../features/AppInfo';\nimport { useNotification } from '../../features/Notifications';\nimport { useTracking } from '../../features/Tracking';\nimport { useDebounce } from '../../hooks/useDebounce';\nimport { useQueryParams } from '../../hooks/useQueryParams';\n\nimport { NpmPackagesFilters } from './components/NpmPackagesFilters';\nimport { NpmPackagesGrid } from './components/NpmPackagesGrid';\nimport { OfflineLayout } from './components/OfflineLayout';\nimport { PageHeader } from './components/PageHeader';\nimport { SortSelect, SortSelectProps } from './components/SortSelect';\nimport { FilterTypes, useMarketplaceData } from './hooks/useMarketplaceData';\nimport { useNavigatorOnline } from './hooks/useNavigatorOnline';\n\ntype NpmPackageType = 'plugin' | 'provider';\n\ninterface MarketplacePageQuery {\n  collections?: string[];\n  categories?: string[];\n  npmPackageType?: NpmPackageType;\n  page?: number;\n  pageSize?: number;\n  search?: string;\n  sort?: SortSelectProps['sortQuery'];\n}\n\ninterface TabQuery {\n  plugin: MarketplacePageQuery;\n  provider: MarketplacePageQuery;\n}\n\nconst PLUGIN = 'plugin';\nconst PROVIDER = 'provider';\n\nconst MarketplacePage = () => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const { toggleNotification } = useNotification();\n  const [{ query }, setQuery] = useQueryParams<MarketplacePageQuery>();\n  const debouncedSearch = useDebounce(query?.search, 500) || '';\n\n  const {\n    autoReload: isInDevelopmentMode,\n    dependencies,\n    useYarn,\n    strapiVersion,\n  } = useAppInfo('MarketplacePage', (state) => state);\n  const isOnline = useNavigatorOnline();\n\n  const npmPackageType = query?.npmPackageType || PLUGIN;\n\n  const [tabQuery, setTabQuery] = React.useState<TabQuery>({\n    plugin: npmPackageType === PLUGIN ? { ...query } : {},\n    provider: npmPackageType === PROVIDER ? { ...query } : {},\n  });\n\n  React.useEffect(() => {\n    trackUsage('didGoToMarketplace');\n  }, [trackUsage]);\n\n  React.useEffect(() => {\n    if (!isInDevelopmentMode) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({\n          id: 'admin.pages.MarketPlacePage.production',\n          defaultMessage: 'Manage plugins from the development environment',\n        }),\n      });\n    }\n  }, [toggleNotification, isInDevelopmentMode, formatMessage]);\n\n  const {\n    pluginsResponse,\n    providersResponse,\n    pluginsStatus,\n    providersStatus,\n    possibleCollections,\n    possibleCategories,\n    pagination,\n  } = useMarketplaceData({ npmPackageType, debouncedSearch, query, tabQuery, strapiVersion });\n\n  if (!isOnline) {\n    return <OfflineLayout />;\n  }\n\n  const handleTabChange = (tab: string) => {\n    const selectedTab = tab === PLUGIN || tab === PROVIDER ? tab : PLUGIN;\n\n    const hasTabQuery = tabQuery[selectedTab] && Object.keys(tabQuery[selectedTab]).length;\n\n    if (hasTabQuery) {\n      setQuery({\n        // Keep filters and search\n        ...tabQuery[selectedTab],\n        search: query?.search || '',\n        // Set tab and reset page\n        npmPackageType: selectedTab,\n        page: 1,\n      });\n    } else {\n      setQuery({\n        // Set tab\n        npmPackageType: selectedTab,\n        // Clear filters\n        collections: [],\n        categories: [],\n        sort: 'name:asc',\n        page: 1,\n        // Keep search\n        search: query?.search || '',\n      });\n    }\n  };\n\n  const handleSelectChange = (update: Partial<MarketplacePageQuery>) => {\n    setQuery({ ...update, page: 1 });\n    setTabQuery((prev) => ({\n      ...prev,\n      [npmPackageType]: { ...prev[npmPackageType], ...update },\n    }));\n  };\n\n  const handleSelectClear = (filterType: FilterTypes) => {\n    setQuery({ [filterType]: [], page: undefined }, 'remove');\n    setTabQuery((prev) => ({ ...prev, [npmPackageType]: {} }));\n  };\n\n  const handleSortSelectChange: SortSelectProps['handleSelectChange'] = ({ sort }) =>\n    // @ts-expect-error - this is a narrowing issue.\n    handleSelectChange({ sort });\n\n  // Check if plugins and providers are installed already\n  const installedPackageNames = Object.keys(dependencies ?? {});\n\n  return (\n    <Layouts.Root>\n      <Page.Main>\n        <Page.Title>\n          {formatMessage({\n            id: 'admin.pages.MarketPlacePage.head',\n            defaultMessage: 'Marketplace - Plugins',\n          })}\n        </Page.Title>\n        <PageHeader isOnline={isOnline} npmPackageType={npmPackageType} />\n        <Layouts.Content>\n          <Tabs.Root variant=\"simple\" onValueChange={handleTabChange} value={npmPackageType}>\n            <Flex justifyContent=\"space-between\" paddingBottom={4}>\n              <Tabs.List\n                aria-label={formatMessage({\n                  id: 'admin.pages.MarketPlacePage.tab-group.label',\n                  defaultMessage: 'Plugins and Providers for Strapi',\n                })}\n              >\n                <Tabs.Trigger value={PLUGIN}>\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.plugins',\n                    defaultMessage: 'Plugins',\n                  })}{' '}\n                  {pluginsResponse ? `(${pluginsResponse.meta.pagination.total})` : '...'}\n                </Tabs.Trigger>\n                <Tabs.Trigger value={PROVIDER}>\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.providers',\n                    defaultMessage: 'Providers',\n                  })}{' '}\n                  {providersResponse ? `(${providersResponse.meta.pagination.total})` : '...'}\n                </Tabs.Trigger>\n              </Tabs.List>\n\n              <Box width=\"25%\">\n                <Searchbar\n                  name=\"searchbar\"\n                  onClear={() => setQuery({ search: '', page: 1 })}\n                  value={query?.search}\n                  onChange={(e) => setQuery({ search: e.target.value, page: 1 })}\n                  clearLabel={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.clear',\n                    defaultMessage: 'Clear the search',\n                  })}\n                  placeholder={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\n                    defaultMessage: 'Search',\n                  })}\n                >\n                  {formatMessage({\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\n                    defaultMessage: 'Search',\n                  })}\n                </Searchbar>\n              </Box>\n            </Flex>\n            <Flex paddingBottom={4} gap={2}>\n              <SortSelect\n                sortQuery={query?.sort || 'name:asc'}\n                handleSelectChange={handleSortSelectChange}\n              />\n              <NpmPackagesFilters\n                npmPackageType={npmPackageType}\n                possibleCollections={possibleCollections}\n                possibleCategories={possibleCategories}\n                query={query || {}}\n                handleSelectChange={handleSelectChange}\n                handleSelectClear={handleSelectClear}\n              />\n            </Flex>\n            <Tabs.Content value={PLUGIN}>\n              <NpmPackagesGrid\n                npmPackages={pluginsResponse?.data}\n                status={pluginsStatus}\n                installedPackageNames={installedPackageNames}\n                useYarn={useYarn}\n                isInDevelopmentMode={isInDevelopmentMode}\n                npmPackageType=\"plugin\"\n                strapiAppVersion={strapiVersion}\n                debouncedSearch={debouncedSearch}\n              />\n            </Tabs.Content>\n            <Tabs.Content value={PROVIDER}>\n              <NpmPackagesGrid\n                npmPackages={providersResponse?.data}\n                status={providersStatus}\n                installedPackageNames={installedPackageNames}\n                useYarn={useYarn}\n                isInDevelopmentMode={isInDevelopmentMode}\n                npmPackageType=\"provider\"\n                debouncedSearch={debouncedSearch}\n              />\n            </Tabs.Content>\n            <Pagination.Root {...pagination} defaultPageSize={24}>\n              <Pagination.PageSize options={['12', '24', '50', '100']} />\n              <Pagination.Links />\n            </Pagination.Root>\n            <Box paddingTop={8}>\n              <a\n                href=\"https://strapi.canny.io/plugin-requests\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer nofollow\"\n                style={{ textDecoration: 'none' }}\n                onClick={() => trackUsage('didMissMarketplacePlugin')}\n              >\n                <ContentBox\n                  title={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.title',\n                    defaultMessage: 'Documentation',\n                  })}\n                  subtitle={formatMessage({\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.description',\n                    defaultMessage:\n                      \"Tell us what plugin you are looking for and we'll let our community plugin developers know in case they are in search for inspiration!\",\n                  })}\n                  icon={<GlassesSquare />}\n                  iconBackground=\"alternative100\"\n                  endAction={\n                    <ExternalLink\n                      fill=\"neutral600\"\n                      width=\"1.2rem\"\n                      height=\"1.2rem\"\n                      style={{ marginLeft: '0.8rem' }}\n                    />\n                  }\n                />\n              </a>\n            </Box>\n          </Tabs.Root>\n        </Layouts.Content>\n      </Page.Main>\n    </Layouts.Root>\n  );\n};\n\nconst ProtectedMarketplacePage = () => {\n  const permissions = useTypedSelector((state) => state.admin_app.permissions.marketplace?.main);\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <MarketplacePage />\n    </Page.Protect>\n  );\n};\n\nexport { MarketplacePage, ProtectedMarketplacePage };\nexport type { NpmPackageType, MarketplacePageQuery, TabQuery };\n"],
  "mappings": "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",
  "names": ["pluralize"]
}
